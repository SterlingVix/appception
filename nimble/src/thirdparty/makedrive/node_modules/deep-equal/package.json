{
  "name": "deep-equal",
  "version": "0.2.1",
  "description": "node's assert.deepEqual algorithm",
  "main": "index.js",
  "directories": {
    "lib": ".",
    "example": "example",
    "test": "test"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "devDependencies": {
    "tape": "~2.3.2"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/substack/node-deep-equal.git"
  },
  "keywords": [
    "equality",
    "equal",
    "compare"
  ],
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "license": "MIT",
  "testling": {
    "files": "test/*.js",
    "browsers": {
      "ie": [
        6,
        7,
        8,
        9
      ],
      "ff": [
        3.5,
        10,
        15
      ],
      "chrome": [
        10,
        22
      ],
      "safari": [
        5.1
      ],
      "opera": [
        12
      ]
    }
  },
  "readme": "# deep-equal\r\n\r\nNode's `assert.deepEqual() algorithm` as a standalone module.\r\n\r\nThis module is around [5 times faster](https://gist.github.com/2790507)\r\nthan wrapping `assert.deepEqual()` in a `try/catch`.\r\n\r\n[![browser support](https://ci.testling.com/substack/node-deep-equal.png)](https://ci.testling.com/substack/node-deep-equal)\r\n\r\n[![build status](https://secure.travis-ci.org/substack/node-deep-equal.png)](https://travis-ci.org/substack/node-deep-equal)\r\n\r\n# example\r\n\r\n``` js\r\nvar equal = require('deep-equal');\r\nconsole.dir([\r\n    equal(\r\n        { a : [ 2, 3 ], b : [ 4 ] },\r\n        { a : [ 2, 3 ], b : [ 4 ] }\r\n    ),\r\n    equal(\r\n        { x : 5, y : [6] },\r\n        { x : 5, y : 6 }\r\n    )\r\n]);\r\n```\r\n\r\n# methods\r\n\r\n``` js\r\nvar deepEqual = require('deep-equal')\r\n```\r\n\r\n## deepEqual(a, b, opts)\r\n\r\nCompare objects `a` and `b`, returning whether they are equal according to a\r\nrecursive equality algorithm.\r\n\r\nIf `opts.strict` is `true`, use strict equality (`===`) to compare leaf nodes.\r\nThe default is to use coercive equality (`==`) because that's how\r\n`assert.deepEqual()` works by default.\r\n\r\n# install\r\n\r\nWith [npm](http://npmjs.org) do:\r\n\r\n```\r\nnpm install deep-equal\r\n```\r\n\r\n# test\r\n\r\nWith [npm](http://npmjs.org) do:\r\n\r\n```\r\nnpm test\r\n```\r\n\r\n# license\r\n\r\nMIT. Derived largely from node's assert module.\r\n",
  "readmeFilename": "readme.markdown",
  "bugs": {
    "url": "https://github.com/substack/node-deep-equal/issues"
  },
  "homepage": "https://github.com/substack/node-deep-equal",
  "_id": "deep-equal@0.2.1",
  "_shasum": "46ab5189c54b44098eef574f7c88ed1922ea1236",
  "_resolved": "git://github.com/humphd/node-deep-equal.git#b9f1fbd8397691e246529152678595b00ee5f468",
  "_from": "node-deep-equal@git://github.com/humphd/node-deep-equal.git#b9f1fbd8397691e246529152678595b00ee5f468"
}
